version: '3'

services:
  flask:
    container_name: flask_webapp
    restart: always
    build: ./cv_maker_shorturl
    env_file: 
      - .env
    links:
      - postgres
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      docker-network:
        aliases:
          - flask_webapp

   webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - flask
    networks:
      - docker-network

  postgres:
    image: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "2410"
      POSTGRES_DB: "login"
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email ltduy24101997@gmail.com --agree-tos --no-eff-email --staging -d cvdemo1.jobnet.com

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
networks:
    docker-network:
      driver: bridge
